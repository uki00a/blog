import projectConfig from 'https://uki00a.github.io/blog/pagic.config.js';
import Ga from 'https://uki00a.github.io/blog/_ga.js';
export default {
    config: { "root": "/", ...projectConfig, branch: 'master' },
    'pagePath': "articles/002-how-to-use-rhysd-dotfiles.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "articles/002-how-to-use-rhysd-dotfiles.html",
    'title': "rhysd/dotfilesを使ってdotfilesリポジトリの管理を楽にする",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>rhysd/dotfilesを使ってdotfilesリポジトリの管理を楽にする</h1>\n<h2 id="%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに<a class="anchor" href="#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">§</a></h2>\n<p><a href="https://github.com/uki00a/dotfiles">dotfilesリポジトリ</a>の管理をシェルスクリプトから<a href="https://github.com/rhysd/dotfiles">rhysd/dotfiles</a>に移行しました。</p>\n<p>この記事では<code>rhysd/dotfiles</code>を使ってdotfilesリポジトリを管理するについて記載します。</p>\n<h2 id="rhysddotfiles%E3%81%A8%E3%81%AF"><code>rhysd/dotfiles</code>とは?<a class="anchor" href="#rhysddotfiles%E3%81%A8%E3%81%AF">§</a></h2>\n<p>dotfilesリポジトリの管理を楽にしてくれるツールです。</p>\n<p>以下の作業を自動化してくれます:</p>\n<ul>\n<li>設定ファイルに対するシンボリックリンクの作成</li>\n<li>シンボリックリンクの削除</li>\n</ul>\n<h2 id="%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">インストール<a class="anchor" href="#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">§</a></h2>\n<p>以下のいずれかの手段でインストールできます</p>\n<ul>\n<li><code>go get</code>を使う</li>\n<li><a href="https://github.com/rhysd/dotfiles/releases">Releases</a>ページからダウンロードする</li>\n</ul>\n<h2 id="dotfiles%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3">dotfilesリポジトリのクローン<a class="anchor" href="#dotfiles%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3">§</a></h2>\n<p>ドキュメントによると、以下のコマンドでcloneできるようです。</p>\n<pre class="language-shell"><code class="language-shell"><span class="token comment"># github.com/uki00a/dotfilesをクローンする</span>\n$ dotfiles clone uki00a\n</code></pre>\n<p>筆者は<a href="https://github.com/x-motemen/ghq">ghq</a>を使っているため、以下のコマンドでdotfilesリポジトリをcloneしました。</p>\n<pre class="language-shell"><code class="language-shell">$ ghq get <a class="token url-link" href="https://github.com/uki00a/dotfiles.git">https://github.com/uki00a/dotfiles.git</a>\n</code></pre>\n<h2 id="%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9">基本的な使い方<a class="anchor" href="#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9">§</a></h2>\n<p>基本的には、cloneしてきたリポジトリへ移動し、以下のコマンドを実行するだけです。\nこれにより、シンボリックリンクの作成が自動化されます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles <span class="token function">link</span>\n</code></pre>\n<p>また、ドライランにも対応しています。\n以下のコマンドを実行することで、どのファイルに対してシンボリックリンクが作成されるかを確認することができます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles <span class="token function">link</span> --dry\nNo repository was specified nor <span class="token variable">$DOTFILES_REPO_PATH</span> was not set. Assuming current repository is a dotfiles repository.\n\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vim\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/nvim\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vim\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.vim\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vscode/keybindings.json\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/Code/User/keybindings.json\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vscode/settings.json\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/Code/User/settings.json\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.agignore\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.agignore\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.tmux.conf\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.tmux.conf\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.vimrc\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.vimrc\'</span>\n</code></pre>\n<h2 id="%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B">カスタムマッピングを定義する<a class="anchor" href="#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B">§</a></h2>\n<p><code>rhysd/dotfiles</code>は、<a href="https://github.com/rhysd/dotfiles/blob/master/src/mappings.go">src/mappings.go</a>にて、シンボリックリンクを作成すべきファイルを管理しています。\nここで定義されている設定ファイルについては、特に設定をしなくとも、<code>dotfiles link</code>を実行するだけでシンボリックリンクの作成が自動化されます。</p>\n<p>しかし、<a href="https://github.com/rhysd/dotfiles/blob/master/src/mappings.go">src/mappings.go</a>で定義されていない設定ファイルについては、自身でマッピングを定義する必要があります。</p>\n<p>まず、<code>.dotfiles</code>ディレクトリを作成し、このディレクトリ内に自身のOS環境に応じて以下のファイルを作成します。</p>\n<ul>\n<li><code>mappings_linux.json</code> (Linux環境向け)</li>\n<li><code>mappings_darwin.json</code> (Mac OS環境向け)</li>\n<li><code>mappings_windows.json</code> (Windows環境向け)</li>\n<li><code>mappings_unixlike.json</code> (LinuxまたはMac OS共通)</li>\n<li><code>mappings.json</code> (全OS共通のマッピング情報を定義する)</li>\n</ul>\n<p>筆者はLinuxを使用しているため、以下のような内容で<code>.dotfiles/mappings_unixlike.json</code>を作成しました。</p>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"vim"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"~/.config/nvim"</span><span class="token punctuation">,</span> <span class="token string">"~/.vim"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"vscode/settings.json"</span><span class="token operator">:</span> <span class="token string">"~/.config/Code/User/settings.json"</span><span class="token punctuation">,</span>\n  <span class="token property">"vscode/keybindings.json"</span><span class="token operator">:</span> <span class="token string">"~/.config/Code/User/keybindings.json"</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>デフォルトでは、<code>rhysd/dotfiles</code>はvscodeやNeovimの設定ファイルを認識しないため、それらに関するマッピング情報を定義しています。</p>\n<p>この状態で<code>dotfiles link</code>を実行すると、vscodeやNeovimの設定ファイルに対するシンボリックリンクが作成されるようになります。</p>\n<h2 id="%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E5%89%8A%E9%99%A4">シンボリックリンクの削除<a class="anchor" href="#%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E5%89%8A%E9%99%A4">§</a></h2>\n<p>以下のコマンドを実行すると、<code>rhysd/dotfiles</code>によって作成されたシンボリックリンクが削除されます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles clean\n</code></pre>\n<h2 id="%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">おわりに<a class="anchor" href="#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">§</a></h2>\n<p>この記事では<code>rhysd/dotfiles</code>の使い方について解説しました。\nこのツールを使うことでシンボリックリンク等の作成が自動化されるため、とても便利だと思いました。\n興味があれば、ぜひ使ってみてください。</p>'
        } }),
    'head': React.createElement(React.Fragment, null,
        React.createElement(Ga, { id: "G-R8RKYMTR71" }),
        React.createElement(React.Fragment, { key: ".1" },
            React.createElement("link", { href: "https://cdn.jsdelivr.net/npm/water.css@2/out/water.min.css", rel: "stylesheet" }),
            React.createElement("link", { href: "https://raw.githubusercontent.com/uki00a/blog/master/src/assets/favicon.ico", rel: "icon" }),
            React.createElement("meta", { content: "https://raw.githubusercontent.com/uki00a/blog/master/src/assets/avatar.png", property: "og:image" }))),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "https://uki00a.github.io/blog/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "rhysd/dotfiles\u3092\u4F7F\u3063\u3066dotfiles\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u7BA1\u7406\u3092\u697D\u306B\u3059\u308B"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h2 id="%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに<a class="anchor" href="#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">§</a></h2>\n<p><a href="https://github.com/uki00a/dotfiles">dotfilesリポジトリ</a>の管理をシェルスクリプトから<a href="https://github.com/rhysd/dotfiles">rhysd/dotfiles</a>に移行しました。</p>\n<p>この記事では<code>rhysd/dotfiles</code>を使ってdotfilesリポジトリを管理するについて記載します。</p>\n<h2 id="rhysddotfiles%E3%81%A8%E3%81%AF"><code>rhysd/dotfiles</code>とは?<a class="anchor" href="#rhysddotfiles%E3%81%A8%E3%81%AF">§</a></h2>\n<p>dotfilesリポジトリの管理を楽にしてくれるツールです。</p>\n<p>以下の作業を自動化してくれます:</p>\n<ul>\n<li>設定ファイルに対するシンボリックリンクの作成</li>\n<li>シンボリックリンクの削除</li>\n</ul>\n<h2 id="%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">インストール<a class="anchor" href="#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">§</a></h2>\n<p>以下のいずれかの手段でインストールできます</p>\n<ul>\n<li><code>go get</code>を使う</li>\n<li><a href="https://github.com/rhysd/dotfiles/releases">Releases</a>ページからダウンロードする</li>\n</ul>\n<h2 id="dotfiles%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3">dotfilesリポジトリのクローン<a class="anchor" href="#dotfiles%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3">§</a></h2>\n<p>ドキュメントによると、以下のコマンドでcloneできるようです。</p>\n<pre class="language-shell"><code class="language-shell"><span class="token comment"># github.com/uki00a/dotfilesをクローンする</span>\n$ dotfiles clone uki00a\n</code></pre>\n<p>筆者は<a href="https://github.com/x-motemen/ghq">ghq</a>を使っているため、以下のコマンドでdotfilesリポジトリをcloneしました。</p>\n<pre class="language-shell"><code class="language-shell">$ ghq get <a class="token url-link" href="https://github.com/uki00a/dotfiles.git">https://github.com/uki00a/dotfiles.git</a>\n</code></pre>\n<h2 id="%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9">基本的な使い方<a class="anchor" href="#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9">§</a></h2>\n<p>基本的には、cloneしてきたリポジトリへ移動し、以下のコマンドを実行するだけです。\nこれにより、シンボリックリンクの作成が自動化されます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles <span class="token function">link</span>\n</code></pre>\n<p>また、ドライランにも対応しています。\n以下のコマンドを実行することで、どのファイルに対してシンボリックリンクが作成されるかを確認することができます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles <span class="token function">link</span> --dry\nNo repository was specified nor <span class="token variable">$DOTFILES_REPO_PATH</span> was not set. Assuming current repository is a dotfiles repository.\n\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vim\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/nvim\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vim\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.vim\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vscode/keybindings.json\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/Code/User/keybindings.json\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/vscode/settings.json\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.config/Code/User/settings.json\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.agignore\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.agignore\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.tmux.conf\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.tmux.conf\'</span>\nExist: <span class="token string">\'/home/uki00a/ghq/github.com/uki00a/dotfiles/.vimrc\'</span> -<span class="token operator">></span> <span class="token string">\'/home/uki00a/.vimrc\'</span>\n</code></pre>\n<h2 id="%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B">カスタムマッピングを定義する<a class="anchor" href="#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B">§</a></h2>\n<p><code>rhysd/dotfiles</code>は、<a href="https://github.com/rhysd/dotfiles/blob/master/src/mappings.go">src/mappings.go</a>にて、シンボリックリンクを作成すべきファイルを管理しています。\nここで定義されている設定ファイルについては、特に設定をしなくとも、<code>dotfiles link</code>を実行するだけでシンボリックリンクの作成が自動化されます。</p>\n<p>しかし、<a href="https://github.com/rhysd/dotfiles/blob/master/src/mappings.go">src/mappings.go</a>で定義されていない設定ファイルについては、自身でマッピングを定義する必要があります。</p>\n<p>まず、<code>.dotfiles</code>ディレクトリを作成し、このディレクトリ内に自身のOS環境に応じて以下のファイルを作成します。</p>\n<ul>\n<li><code>mappings_linux.json</code> (Linux環境向け)</li>\n<li><code>mappings_darwin.json</code> (Mac OS環境向け)</li>\n<li><code>mappings_windows.json</code> (Windows環境向け)</li>\n<li><code>mappings_unixlike.json</code> (LinuxまたはMac OS共通)</li>\n<li><code>mappings.json</code> (全OS共通のマッピング情報を定義する)</li>\n</ul>\n<p>筆者はLinuxを使用しているため、以下のような内容で<code>.dotfiles/mappings_unixlike.json</code>を作成しました。</p>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"vim"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"~/.config/nvim"</span><span class="token punctuation">,</span> <span class="token string">"~/.vim"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"vscode/settings.json"</span><span class="token operator">:</span> <span class="token string">"~/.config/Code/User/settings.json"</span><span class="token punctuation">,</span>\n  <span class="token property">"vscode/keybindings.json"</span><span class="token operator">:</span> <span class="token string">"~/.config/Code/User/keybindings.json"</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>デフォルトでは、<code>rhysd/dotfiles</code>はvscodeやNeovimの設定ファイルを認識しないため、それらに関するマッピング情報を定義しています。</p>\n<p>この状態で<code>dotfiles link</code>を実行すると、vscodeやNeovimの設定ファイルに対するシンボリックリンクが作成されるようになります。</p>\n<h2 id="%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E5%89%8A%E9%99%A4">シンボリックリンクの削除<a class="anchor" href="#%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E5%89%8A%E9%99%A4">§</a></h2>\n<p>以下のコマンドを実行すると、<code>rhysd/dotfiles</code>によって作成されたシンボリックリンクが削除されます。</p>\n<pre class="language-shell"><code class="language-shell">$ dotfiles clean\n</code></pre>\n<h2 id="%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">おわりに<a class="anchor" href="#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">§</a></h2>\n<p>この記事では<code>rhysd/dotfiles</code>の使い方について解説しました。\nこのツールを使うことでシンボリックリンク等の作成が自動化されるため、とても便利だと思いました。\n興味があれば、ぜひ使ってみてください。</p>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB" }, "\u306F\u3058\u3081\u306B")),
            React.createElement("li", null,
                React.createElement("a", { href: "#rhysddotfiles%E3%81%A8%E3%81%AF" }, "rhysd/dotfiles\u3068\u306F?")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB" }, "\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB")),
            React.createElement("li", null,
                React.createElement("a", { href: "#dotfiles%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3" }, "dotfiles\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30AF\u30ED\u30FC\u30F3")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9" }, "\u57FA\u672C\u7684\u306A\u4F7F\u3044\u65B9")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B" }, "\u30AB\u30B9\u30BF\u30E0\u30DE\u30C3\u30D4\u30F3\u30B0\u3092\u5B9A\u7FA9\u3059\u308B")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E5%89%8A%E9%99%A4" }, "\u30B7\u30F3\u30DC\u30EA\u30C3\u30AF\u30EA\u30F3\u30AF\u306E\u524A\u9664")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB" }, "\u304A\u308F\u308A\u306B")))),
    'author': "uki00a",
    'contributors': [
        "uki00a"
    ],
    'date': "2021-06-03T21:14:59.000Z",
    'updated': null,
    'excerpt': "はじめに dotfilesリポジトリの管理をシェルスクリプトからrhysd/dotfilesに移行しました。 この記事ではrhysd/dotfilesを使ってdotfilesリポジトリを管理するについて記載します。 rhysd/dotfilesとは? dotfilesリポジトリの管...",
    'cover': undefined,
    'publishDate': "2020-08-23T00:00:00.000Z",
    'tags': [
        "vim",
        "vscode"
    ]
};
